{
  "service": {
    "service": "sls-state-machine",
    "serviceObject": {
      "name": "sls-state-machine"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "go1.x",
      "memorySize": 128,
      "timeout": 5,
      "region": "us-east-1",
      "endpointType": "regional",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "states:StartExecution"
          ],
          "Resource": "arn:aws:states:us-east-1:132172135366:stateMachine:HelloStepFunc"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "StateInvokeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sls-state-machine-dev-stateInvoke"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "sls-state-machine",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sls-state-machine-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sls-state-machine-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "sls-state-machine",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "StateInvokeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sls-state-machine/dev/1590514481932-2020-05-26T17:34:41.932Z/sls-state-machine.zip"
              },
              "FunctionName": "sls-state-machine-dev-stateInvoke",
              "Handler": "build/stateInvoke",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 5,
              "Description": "This lambda invokes a state machine",
              "Environment": {
                "Variables": {
                  "STATE_MACHINE_ARN": {
                    "Ref": "HelloStepFunc"
                  }
                }
              }
            },
            "DependsOn": [
              "StateInvokeLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "StateInvokeLambdaVersionf7KqX4A6CQGAjoa9LPb1zN71eTkaeHw2PTXIpDlcw0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "StateInvokeLambdaFunction"
              },
              "CodeSha256": "yZRBllazpA4jJptt2JpsAIbnZ2C8n+sccyLc7uPfVaM=",
              "Description": "This lambda invokes a state machine"
            }
          },
          "HelloStepFuncRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "states.us-east-1.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "dev-us-east-1-sls-state-machine-statemachine",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:InvokeFunction"
                        ],
                        "Resource": [
                          "arn:aws:lambda:us-east-1:132172135366:function:calculateSquare",
                          {
                            "Fn::Sub": [
                              "${functionArn}:*",
                              {
                                "functionArn": "arn:aws:lambda:us-east-1:132172135366:function:calculateSquare"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "HelloStepFunc": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
              "DefinitionString": "{\n  \"Comment\": \"HelloWorld example\",\n  \"StartAt\": \"WaitFormSomeTime\",\n  \"States\": {\n    \"WaitFormSomeTime\": {\n      \"Comment\": \"Wait state\",\n      \"Type\": \"Wait\",\n      \"SecondsPath\": \"$.WaitTime\",\n      \"Next\": \"SquareNumber\"\n    },\n    \"SquareNumber\": {\n      \"Comment\": \"return square of the number\",\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-east-1:132172135366:function:calculateSquare\",\n      \"TimeoutSeconds\": 10,\n      \"Next\": \"HelloWorld\"\n    },\n    \"HelloWorld\": {\n      \"Comment\": \"Hello World Step\",\n      \"Type\": \"Pass\",\n      \"End\": true\n    }\n  }\n}",
              "RoleArn": {
                "Fn::GetAtt": [
                  "HelloStepFuncRole",
                  "Arn"
                ]
              },
              "StateMachineName": "HelloStepFunc"
            },
            "DependsOn": [
              "HelloStepFuncRole"
            ]
          },
          "HelloStepFuncStepFunctionsEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "rate(5 minutes)",
              "State": "DISABLED",
              "Targets": [
                {
                  "Input": "{\"Comment\":\"CloudWatch Event\",\"Number\":12,\"WaitTime\":5}",
                  "Arn": {
                    "Ref": "HelloStepFunc"
                  },
                  "Id": "HelloStepFuncStepFunctionsSchedule",
                  "RoleArn": {
                    "Fn::GetAtt": [
                      "HelloStepFuncScheduleToStepFunctionsRole",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          },
          "HelloStepFuncScheduleToStepFunctionsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "events.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "dev-us-east-1-sls-state-machine-HelloStepFunc-schedule",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "states:StartExecution"
                        ],
                        "Resource": {
                          "Ref": "HelloStepFunc"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-sls-state-machine",
              "EndpointConfiguration": {
                "Types": [
                  "REGIONAL"
                ]
              }
            }
          },
          "ApiGatewayResourceMath": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "math",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceMathSquare": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceMath"
              },
              "PathPart": "square",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodMathSquarePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "AuthorizationType": "NONE",
              "ApiKeyRequired": false,
              "ResourceId": {
                "Ref": "ApiGatewayResourceMathSquare"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS",
                "Credentials": {
                  "Fn::GetAtt": [
                    "ApigatewayToStepFunctionsRole",
                    "Arn"
                  ]
                },
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":states:action/StartExecution"
                    ]
                  ]
                },
                "PassthroughBehavior": "NEVER",
                "RequestTemplates": {
                  "application/json": {
                    "Fn::Sub": [
                      "\n#set( $body = $util.escapeJavaScript($input.json('$')).replaceAll(\"\\\\'\", \"'\") )\n{\"input\": \"$body\", \"name\": \"$context.requestId\", \"stateMachineArn\":\"${StateMachineArn}\"}",
                      {
                        "StateMachineArn": {
                          "Ref": "HelloStepFunc"
                        }
                      }
                    ]
                  },
                  "application/x-www-form-urlencoded": {
                    "Fn::Sub": [
                      "\n#set( $body = $util.escapeJavaScript($input.json('$')).replaceAll(\"\\\\'\", \"'\") )\n{\"input\": \"$body\", \"name\": \"$context.requestId\", \"stateMachineArn\":\"${StateMachineArn}\"}",
                      {
                        "StateMachineArn": {
                          "Ref": "HelloStepFunc"
                        }
                      }
                    ]
                  }
                },
                "IntegrationResponses": [
                  {
                    "StatusCode": 200,
                    "SelectionPattern": 200,
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  },
                  {
                    "StatusCode": 400,
                    "SelectionPattern": 400,
                    "ResponseParameters": {},
                    "ResponseTemplates": {}
                  }
                ]
              },
              "MethodResponses": [
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": 200
                },
                {
                  "ResponseParameters": {},
                  "ResponseModels": {},
                  "StatusCode": 400
                }
              ]
            }
          },
          "ApigatewayToStepFunctionsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "apigateway.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "apigatewaytostepfunctions",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "states:StartExecution"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "ApiGatewayDeployment1590514451399": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodMathSquarePost"
            ]
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "StateInvokeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "StateInvokeLambdaVersionf7KqX4A6CQGAjoa9LPb1zN71eTkaeHw2PTXIpDlcw0"
            }
          },
          "HelloStepFuncArn": {
            "Description": "Current StateMachine Arn",
            "Value": {
              "Ref": "HelloStepFunc"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          },
          "HelloStepFunc": {
            "Description": "The ARN of the example state machine",
            "Value": {
              "Ref": "HelloStepFunc"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-step-functions"
    ],
    "pluginsData": {},
    "functions": {
      "stateInvoke": {
        "handler": "build/stateInvoke",
        "environment": {
          "STATE_MACHINE_ARN": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"StateInvokeLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"STATE_MACHINE_ARN\"]"
          }
        },
        "description": "This lambda invokes a state machine",
        "events": [],
        "name": "sls-state-machine-dev-stateInvoke",
        "package": {},
        "memory": 128,
        "timeout": 5,
        "runtime": "go1.x",
        "vpc": {},
        "versionLogicalId": "StateInvokeLambdaVersionf7KqX4A6CQGAjoa9LPb1zN71eTkaeHw2PTXIpDlcw0"
      }
    },
    "resources": {
      "Outputs": {
        "HelloStepFunc": {
          "Description": "The ARN of the example state machine",
          "Value": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"StateInvokeLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"STATE_MACHINE_ARN\"]"
          }
        }
      },
      "Resources": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "stepFunctions": {
      "stateMachines": {
        "HelloStepFunc": {
          "name": "HelloStepFunc",
          "events": [
            {
              "http": {
                "path": "math/square",
                "method": "post"
              }
            },
            {
              "schedule": {
                "rate": "rate(5 minutes)",
                "enabled": false,
                "input": {
                  "Comment": "CloudWatch Event",
                  "Number": 12,
                  "WaitTime": 5
                }
              }
            }
          ],
          "definition": {
            "Comment": "HelloWorld example",
            "StartAt": "WaitFormSomeTime",
            "States": {
              "WaitFormSomeTime": {
                "Comment": "Wait state",
                "Type": "Wait",
                "SecondsPath": "$.WaitTime",
                "Next": "SquareNumber"
              },
              "SquareNumber": {
                "Comment": "return square of the number",
                "Type": "Task",
                "Resource": "arn:aws:lambda:us-east-1:132172135366:function:calculateSquare",
                "TimeoutSeconds": 10,
                "Next": "HelloWorld"
              },
              "HelloWorld": {
                "Comment": "Hello World Step",
                "Type": "Pass",
                "End": true
              }
            }
          }
        }
      },
      "activities": []
    },
    "artifact": "/Users/romelcampbell/GOCODE/udemy/Serverless/code/stepFunctions/stateMachine/.serverless/sls-state-machine.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/sls-state-machine/dev/1590514481932-2020-05-26T17:34:41.932Z",
    "artifact": "sls-state-machine.zip"
  }
}